// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://127.0.0.1:8080' | (string & {});
};

export type ActionForms = {
    id: string;
    methodForms: Array<ActionMethodForm>;
    name: string;
};

export type ActionMethodForm = {
    id: string;
    providerForms: Array<ActionProviderForm>;
};

export type ActionProviderForm = {
    form: Form;
    id?: string | null;
};

export type EmailAddress = {
    email: string;
    id: string;
    isPrimary: boolean;
    isVerified: boolean;
};

export type _Error = {
    message: string;
    statusCode: number;
    statusReason?: string | null;
};

export type Form = {
    inputs: Array<Input>;
};

export type Input = {
    label?: string | null;
    name: string;
    type: InputType;
    value?: string | null;
};

export type InputType =
    | (InputTypeButton & {
          type: 'button';
      })
    | (InputTypeCheckbox & {
          type: 'checkbox';
      })
    | (InputTypeColor & {
          type: 'color';
      })
    | (InputTypeDate & {
          type: 'date';
      })
    | (InputTypeDatetimeLocal & {
          type: 'datetime-local';
      })
    | (InputTypeEmail & {
          type: 'email';
      })
    | (InputTypeFile & {
          type: 'file';
      })
    | (InputTypeHidden & {
          type: 'hidden';
      })
    | (InputTypeImage & {
          type: 'image';
      })
    | (InputTypeMonth & {
          type: 'month';
      })
    | (InputTypeNumber & {
          type: 'number';
      })
    | (InputTypePassword & {
          type: 'password';
      })
    | (InputTypeRadio & {
          type: 'radio';
      })
    | (InputTypeRange & {
          type: 'range';
      })
    | (InputTypeReset & {
          type: 'reset';
      })
    | (InputTypeSearch & {
          type: 'search';
      })
    | (InputTypeSubmit & {
          type: 'submit';
      })
    | (InputTypeTel & {
          type: 'tel';
      })
    | (InputTypeText & {
          type: 'text';
      })
    | (InputTypeTime & {
          type: 'time';
      })
    | (InputTypeUrl & {
          type: 'url';
      })
    | (InputTypeWeek & {
          type: 'week';
      });

export type InputTypeButton = {
    [key: string]: unknown;
};

export type InputTypeCheckbox = {
    checked?: boolean | null;
    required?: boolean | null;
};

export type InputTypeColor = {
    alpha?: boolean | null;
    autocomplete?: string | null;
    colorspace?: string | null;
    list?: string | null;
};

export type InputTypeDate = {
    autocomplete?: string | null;
    list?: string | null;
    max?: string | null;
    min?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    step?: string | null;
};

export type InputTypeDatetimeLocal = {
    autocomplete?: string | null;
    list?: string | null;
    max?: string | null;
    min?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    step?: string | null;
};

export type InputTypeEmail = {
    autocomplete?: string | null;
    list?: string | null;
    maxlength?: string | null;
    minlength?: string | null;
    multiple?: boolean | null;
    pattern?: string | null;
    placeholder?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    size?: string | null;
};

export type InputTypeFile = {
    accept?: string | null;
    multiple?: boolean | null;
    required?: boolean | null;
};

export type InputTypeHidden = {
    autocomplete?: string | null;
    required?: boolean | null;
};

export type InputTypeImage = {
    alt?: string | null;
    height?: string | null;
    src?: string | null;
    width?: string | null;
};

export type InputTypeMonth = {
    autocomplete?: string | null;
    list?: string | null;
    max?: string | null;
    min?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    step?: string | null;
};

export type InputTypeNumber = {
    autocomplete?: string | null;
    list?: string | null;
    max?: string | null;
    min?: string | null;
    placeholder?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    step?: string | null;
};

export type InputTypePassword = {
    autocomplete?: string | null;
    maxlength?: string | null;
    minlength?: string | null;
    pattern?: string | null;
    placeholder?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    size?: string | null;
};

export type InputTypeRadio = {
    checked?: boolean | null;
    required?: boolean | null;
};

export type InputTypeRange = {
    autocomplete?: string | null;
    list?: string | null;
    max?: string | null;
    min?: string | null;
    step?: string | null;
};

export type InputTypeReset = {
    [key: string]: unknown;
};

export type InputTypeSearch = {
    autocomplete?: string | null;
    list?: string | null;
    maxlength?: string | null;
    minlength?: string | null;
    pattern?: string | null;
    placeholder?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    size?: string | null;
};

export type InputTypeSubmit = {
    [key: string]: unknown;
};

export type InputTypeTel = {
    autocomplete?: string | null;
    list?: string | null;
    maxlength?: string | null;
    minlength?: string | null;
    pattern?: string | null;
    placeholder?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    size?: string | null;
};

export type InputTypeText = {
    autocomplete?: string | null;
    list?: string | null;
    maxlength?: string | null;
    minlength?: string | null;
    pattern?: string | null;
    placeholder?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    size?: string | null;
};

export type InputTypeTime = {
    autocomplete?: string | null;
    list?: string | null;
    max?: string | null;
    min?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    step?: string | null;
};

export type InputTypeUrl = {
    autocomplete?: string | null;
    list?: string | null;
    maxlength?: string | null;
    minlength?: string | null;
    pattern?: string | null;
    placeholder?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    size?: string | null;
};

export type InputTypeWeek = {
    autocomplete?: string | null;
    list?: string | null;
    max?: string | null;
    min?: string | null;
    readonly?: boolean | null;
    required?: boolean | null;
    step?: string | null;
};

export type User = {
    additional: unknown;
    emailAddresses: Array<EmailAddress>;
    id: string;
    name?: string | null;
};

export type GetActionFormsData = {
    body?: never;
    path: {
        /**
         * ID of the action.
         */
        actionId: string;
    };
    query?: never;
    url: '/api/auth/forms/{actionId}';
};

export type GetActionFormsErrors = {
    /**
     * Internal server error.
     */
    500: _Error;
};

export type GetActionFormsError = GetActionFormsErrors[keyof GetActionFormsErrors];

export type GetActionFormsResponses = {
    /**
     * The action forms.
     */
    200: ActionForms;
};

export type GetActionFormsResponse = GetActionFormsResponses[keyof GetActionFormsResponses];

export type GetCurrentUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/auth/user';
};

export type GetCurrentUserErrors = {
    /**
     * No account signed in.
     */
    401: _Error;
    /**
     * Internal server error.
     */
    500: _Error;
};

export type GetCurrentUserError = GetCurrentUserErrors[keyof GetCurrentUserErrors];

export type GetCurrentUserResponses = {
    /**
     * The current user account.
     */
    200: User;
};

export type GetCurrentUserResponse = GetCurrentUserResponses[keyof GetCurrentUserResponses];

export type CallActionData = {
    body: unknown;
    path: {
        /**
         * ID of the method.
         */
        methodId: string;
        /**
         * ID of the action.
         */
        actionId: string;
        /**
         * ID of provider (optional).
         */
        providerId: string | null;
    };
    query?: never;
    url: '/api/auth/{methodId}/{actionId}/{providerId}';
};

export type CallActionErrors = {
    /**
     * Internal server error.
     */
    500: _Error;
};

export type CallActionError = CallActionErrors[keyof CallActionErrors];
