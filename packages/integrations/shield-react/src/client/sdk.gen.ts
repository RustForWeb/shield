// This file is auto-generated by @hey-api/openapi-ts
import { client } from './client.gen.js';
import {
    type Client,
    type Options as Options2,
    type TDataShape,
    urlSearchParamsBodySerializer,
} from './client/index.js';
import type {
    CallActionData,
    CallActionErrors,
    GetActionFormsData,
    GetActionFormsErrors,
    GetActionFormsResponses,
    GetCurrentUserData,
    GetCurrentUserErrors,
    GetCurrentUserResponses,
} from './types.gen.js';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = Options2<
    TData,
    ThrowOnError
> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get action forms
 * Get action forms.
 */
export const getActionForms = <ThrowOnError extends boolean = false>(
    options: Options<GetActionFormsData, ThrowOnError>,
) => {
    return (options.client ?? client).get<GetActionFormsResponses, GetActionFormsErrors, ThrowOnError>({
        url: '/api/auth/forms/{actionId}',
        ...options,
    });
};

/**
 * Get current user
 * Get the current user account.
 */
export const getCurrentUser = <ThrowOnError extends boolean = false>(
    options?: Options<GetCurrentUserData, ThrowOnError>,
) => {
    return (options?.client ?? client).get<GetCurrentUserResponses, GetCurrentUserErrors, ThrowOnError>({
        url: '/api/auth/user',
        ...options,
    });
};

/**
 * Call action
 * Call an action.
 */
export const callAction = <ThrowOnError extends boolean = false>(options: Options<CallActionData, ThrowOnError>) => {
    return (options.client ?? client).post<unknown, CallActionErrors, ThrowOnError>({
        ...urlSearchParamsBodySerializer,
        url: '/api/auth/{methodId}/{actionId}/{providerId}',
        ...options,
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
            ...options.headers,
        },
    });
};
