{
    "id": "b1be2d6b-2bba-43f9-9601-cb2c89ed120c",
    "realm": "Shield",
    "notBefore": 0,
    "defaultSignatureAlgorithm": "RS256",
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "oauth2DeviceCodeLifespan": 600,
    "oauth2DevicePollingInterval": 5,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxTemporaryLockouts": 0,
    "bruteForceStrategy": "MULTIPLE",
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
        "realm": [
            {
                "id": "febe45a3-4918-44df-9cf1-1cf387b88183",
                "name": "uma_authorization",
                "description": "${role_uma_authorization}",
                "composite": false,
                "clientRole": false,
                "containerId": "b1be2d6b-2bba-43f9-9601-cb2c89ed120c",
                "attributes": {}
            },
            {
                "id": "330e54db-85a4-4ac6-bde1-00b2399804c3",
                "name": "offline_access",
                "description": "${role_offline-access}",
                "composite": false,
                "clientRole": false,
                "containerId": "b1be2d6b-2bba-43f9-9601-cb2c89ed120c",
                "attributes": {}
            },
            {
                "id": "f6dfc258-147c-48f2-ad0a-25302e77c7e4",
                "name": "default-roles-shield",
                "description": "${role_default-roles}",
                "composite": true,
                "composites": {
                    "realm": ["offline_access", "uma_authorization"],
                    "client": {
                        "account": ["manage-account", "view-profile"]
                    }
                },
                "clientRole": false,
                "containerId": "b1be2d6b-2bba-43f9-9601-cb2c89ed120c",
                "attributes": {}
            }
        ],
        "client": {
            "realm-management": [
                {
                    "id": "00b48525-462c-41dc-9209-24f95d9019e3",
                    "name": "realm-admin",
                    "description": "${role_realm-admin}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": [
                                "manage-events",
                                "view-authorization",
                                "view-events",
                                "manage-identity-providers",
                                "manage-realm",
                                "view-identity-providers",
                                "impersonation",
                                "manage-clients",
                                "query-clients",
                                "query-groups",
                                "manage-users",
                                "query-users",
                                "manage-authorization",
                                "view-users",
                                "query-realms",
                                "view-realm",
                                "create-client",
                                "view-clients"
                            ]
                        }
                    },
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "05125a9d-fef1-4ae8-b071-cf23800fe9e4",
                    "name": "manage-events",
                    "description": "${role_manage-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "06609cb5-2bc0-451f-b901-88ff588fb0e0",
                    "name": "view-authorization",
                    "description": "${role_view-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "9f19ac8b-f6c8-4661-99c7-1d337dbc3921",
                    "name": "view-events",
                    "description": "${role_view-events}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "a535a830-79be-4c4f-8520-53eced0b35b7",
                    "name": "manage-identity-providers",
                    "description": "${role_manage-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "cb15d9b8-665e-4527-977e-c52ffbfc934a",
                    "name": "manage-realm",
                    "description": "${role_manage-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "35f0ebea-f8e2-41a8-bd11-dcb27ad56813",
                    "name": "view-identity-providers",
                    "description": "${role_view-identity-providers}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "3a9f4f8b-6c92-49b8-969f-17f80e19dba8",
                    "name": "impersonation",
                    "description": "${role_impersonation}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "8f9cec9a-5277-4a5c-9438-492dda3216da",
                    "name": "manage-clients",
                    "description": "${role_manage-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "4d7e191c-7501-4c6c-95e5-ecd32ed11674",
                    "name": "manage-users",
                    "description": "${role_manage-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "258348dd-339a-41f8-85e2-6bb0adb8b848",
                    "name": "query-clients",
                    "description": "${role_query-clients}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "2e2b3b78-c7f5-4763-bbef-ef2762bc0f27",
                    "name": "query-groups",
                    "description": "${role_query-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "70953222-a8d8-4f4f-ab8d-77260ccb85b5",
                    "name": "manage-authorization",
                    "description": "${role_manage-authorization}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "316f7402-fe08-4b88-b972-fdceb14e503e",
                    "name": "query-users",
                    "description": "${role_query-users}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "857a2a44-b420-4187-8a5b-75ef77282970",
                    "name": "query-realms",
                    "description": "${role_query-realms}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "09b39474-85e2-45b6-83da-bcdc4ab7dd09",
                    "name": "view-users",
                    "description": "${role_view-users}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": ["query-groups", "query-users"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "ead1711e-8e4d-4fdc-9c38-69db4409e05f",
                    "name": "create-client",
                    "description": "${role_create-client}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "29b7d831-bf3a-4abf-9b33-57b0b36504c7",
                    "name": "view-realm",
                    "description": "${role_view-realm}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                },
                {
                    "id": "d3477cdd-e543-4540-9424-524ddef4f5f6",
                    "name": "view-clients",
                    "description": "${role_view-clients}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "realm-management": ["query-clients"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "89e012fb-a732-46cc-814e-54b53862c9d7",
                    "attributes": {}
                }
            ],
            "security-admin-console": [],
            "admin-cli": [],
            "account-console": [],
            "broker": [
                {
                    "id": "23908553-e96a-4bfa-8261-a14d9b72887d",
                    "name": "read-token",
                    "description": "${role_read-token}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "8207a488-2f1c-4ca1-8a96-ad72f90d5d16",
                    "attributes": {}
                }
            ],
            "client1": [],
            "account": [
                {
                    "id": "586a06e3-e5ca-4603-91d4-67a8da28a24a",
                    "name": "view-applications",
                    "description": "${role_view-applications}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c78cccba-fd76-41b1-9b89-a7e74bcf1b3e",
                    "attributes": {}
                },
                {
                    "id": "7ce4f4a8-624e-4f04-a8f1-7ff935ad8eaa",
                    "name": "manage-account",
                    "description": "${role_manage-account}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": ["manage-account-links"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "c78cccba-fd76-41b1-9b89-a7e74bcf1b3e",
                    "attributes": {}
                },
                {
                    "id": "8855f223-254a-41c4-98ac-d2933596a82c",
                    "name": "manage-account-links",
                    "description": "${role_manage-account-links}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c78cccba-fd76-41b1-9b89-a7e74bcf1b3e",
                    "attributes": {}
                },
                {
                    "id": "b59dbc7e-b060-414d-b4fc-8d1d9c406a93",
                    "name": "manage-consent",
                    "description": "${role_manage-consent}",
                    "composite": true,
                    "composites": {
                        "client": {
                            "account": ["view-consent"]
                        }
                    },
                    "clientRole": true,
                    "containerId": "c78cccba-fd76-41b1-9b89-a7e74bcf1b3e",
                    "attributes": {}
                },
                {
                    "id": "029d208d-cc46-4a4f-9f9b-ae45927bac52",
                    "name": "view-consent",
                    "description": "${role_view-consent}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c78cccba-fd76-41b1-9b89-a7e74bcf1b3e",
                    "attributes": {}
                },
                {
                    "id": "781401be-f3f7-402b-b314-e39d55ff34d2",
                    "name": "delete-account",
                    "description": "${role_delete-account}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c78cccba-fd76-41b1-9b89-a7e74bcf1b3e",
                    "attributes": {}
                },
                {
                    "id": "a91eead7-7005-43ee-b2d7-fc1cce113f51",
                    "name": "view-groups",
                    "description": "${role_view-groups}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c78cccba-fd76-41b1-9b89-a7e74bcf1b3e",
                    "attributes": {}
                },
                {
                    "id": "ecfa3975-9f37-492e-83f1-3280bf891419",
                    "name": "view-profile",
                    "description": "${role_view-profile}",
                    "composite": false,
                    "clientRole": true,
                    "containerId": "c78cccba-fd76-41b1-9b89-a7e74bcf1b3e",
                    "attributes": {}
                }
            ]
        }
    },
    "groups": [],
    "defaultRole": {
        "id": "f6dfc258-147c-48f2-ad0a-25302e77c7e4",
        "name": "default-roles-shield",
        "description": "${role_default-roles}",
        "composite": true,
        "clientRole": false,
        "containerId": "b1be2d6b-2bba-43f9-9601-cb2c89ed120c"
    },
    "requiredCredentials": ["password"],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpPolicyCodeReusable": false,
    "otpSupportedApplications": ["totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName"],
    "localizationTexts": {},
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": ["ES256", "RS256"],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyExtraOrigins": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256", "RS256"],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessExtraOrigins": [],
    "users": [
        {
            "id": "fb07747c-24b9-410f-8299-9ece5626fe26",
            "username": "user1",
            "firstName": "User",
            "lastName": "One",
            "email": "user1@shield.rustforweb.org",
            "emailVerified": true,
            "createdTimestamp": 1734253557848,
            "enabled": true,
            "totp": false,
            "credentials": [
                {
                    "type": "password",
                    "value": "user1",
                    "temporary": false
                }
            ],
            "disableableCredentialTypes": [],
            "requiredActions": [],
            "realmRoles": ["default-roles-shield"],
            "notBefore": 0,
            "groups": []
        }
    ],
    "scopeMappings": [
        {
            "clientScope": "offline_access",
            "roles": ["offline_access"]
        }
    ],
    "clientScopeMappings": {
        "account": [
            {
                "client": "account-console",
                "roles": ["manage-account", "view-groups"]
            }
        ]
    },
    "clients": [
        {
            "id": "c78cccba-fd76-41b1-9b89-a7e74bcf1b3e",
            "clientId": "account",
            "name": "${client_account}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/Shield/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["/realms/Shield/account/*"],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": ["address", "phone", "organization", "offline_access", "microprofile-jwt"]
        },
        {
            "id": "a377eb9d-524b-43c3-b317-ea445c73e1d3",
            "clientId": "account-console",
            "name": "${client_account-console}",
            "rootUrl": "${authBaseUrl}",
            "baseUrl": "/realms/Shield/account/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["/realms/Shield/account/*"],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "0c62eed6-16fb-4515-aa81-890282796599",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ],
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": ["address", "phone", "organization", "offline_access", "microprofile-jwt"]
        },
        {
            "id": "2fb428ec-ebd3-4f4a-a1e5-f8404bdd7064",
            "clientId": "admin-cli",
            "name": "${client_admin-cli}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": false,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": true,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": ["address", "phone", "organization", "offline_access", "microprofile-jwt"]
        },
        {
            "id": "8207a488-2f1c-4ca1-8a96-ad72f90d5d16",
            "clientId": "broker",
            "name": "${client_broker}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": ["address", "phone", "organization", "offline_access", "microprofile-jwt"]
        },
        {
            "id": "8cf1890a-fcbe-4987-8ead-506d2982e2b6",
            "clientId": "client1",
            "name": "",
            "description": "",
            "rootUrl": "",
            "adminUrl": "",
            "baseUrl": "http://localhost:8080",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "secret": "xcpQsaGbRILTljPtX4npjmYMBjKrariJ",
            "redirectUris": ["http://localhost:8080/api/auth/oidc/sign-in-callback/keycloak"],
            "webOrigins": ["http://localhost:8080"],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": true,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "oidc.ciba.grant.enabled": "false",
                "client.secret.creation.time": "1734253656",
                "backchannel.logout.session.required": "true",
                "oauth2.device.authorization.grant.enabled": "false",
                "display.on.consent.screen": "false",
                "use.jwks.url": "false",
                "backchannel.logout.revoke.offline.tokens": "false",
                "jwt.credential.certificate": "MIICnTCCAYUCBgGTyZPHnzANBgkqhkiG9w0BAQsFADASMRAwDgYDVQQDDAdjbGllbnQxMB4XDTI0MTIxNTA5MDcwNVoXDTM0MTIxNTA5MDg0NVowEjEQMA4GA1UEAwwHY2xpZW50MTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMjzvVchYAr9GcW4rZk+TEAl5+e9mPE0LVm0FkzpFg61jvxnq6Gv9eoGv0GHLD+S1WKS1mx1rpBoeMCKtjSjjIaYqkPxbs8LFGe9azYnFHvXv1tXnJhspPSWeHi9cScZD07Q3TdUKJF+6ZSwjFB05LdWFm/qOh42MWvwO73oudIkqILLFKwUHT+cPLsdUjB16UgqnFKOejWIehJYmkt+kJN39HlipPRUqpTgFJoqfYaxoecvFEA3yLGEMXFd+K1DN0H8Tj4jIP5fi1APcnpO8VQYgEa0ivOAWrokYxRlZciqp1MKMHdDFsHlt9NTwoA4AjllOY0uaYl6FJxau36wX2sCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAi8wmGTqfB1pT5hTjza6ssm9Rt60BWaa6/j9vYhLDG3JZsOWlBv21Zw98GY+To8GR3IuArolXMALYYOp6hEDRRdKLok8Pe3uTRklR+LxT2mJDCvouvYpwjd3Hc18XzupOgO7RUt4xsNrQ29/W/1pG/pfSh1fstmxBqgsOmnN0Hw+D9Dy+3C3PvI5VIfEXuzadHrgNyzRWkCXRS4D2V7rTypeahzXk3LGDrroBNm2fUxQHDBNjiDkB7mql88MQVXs2cdhsNQcOR1dXfNNDo4WDdZ1pDguHwpN+A8jVVsAc1D8RwzuAFHBIgAaMvvcjBAsahql6m40blVFuVKIEvxHlMw=="
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": -1,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": ["address", "phone", "organization", "offline_access", "microprofile-jwt"]
        },
        {
            "id": "89e012fb-a732-46cc-814e-54b53862c9d7",
            "clientId": "realm-management",
            "name": "${client_realm-management}",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": [],
            "webOrigins": [],
            "notBefore": 0,
            "bearerOnly": true,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": false,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "true"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": false,
            "nodeReRegistrationTimeout": 0,
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": ["address", "phone", "organization", "offline_access", "microprofile-jwt"]
        },
        {
            "id": "bf398bfc-e28b-4a5f-a8d9-28b6f4e903a4",
            "clientId": "security-admin-console",
            "name": "${client_security-admin-console}",
            "rootUrl": "${authAdminUrl}",
            "baseUrl": "/admin/Shield/console/",
            "surrogateAuthRequired": false,
            "enabled": true,
            "alwaysDisplayInConsole": false,
            "clientAuthenticatorType": "client-secret",
            "redirectUris": ["/admin/Shield/console/*"],
            "webOrigins": ["+"],
            "notBefore": 0,
            "bearerOnly": false,
            "consentRequired": false,
            "standardFlowEnabled": true,
            "implicitFlowEnabled": false,
            "directAccessGrantsEnabled": false,
            "serviceAccountsEnabled": false,
            "publicClient": true,
            "frontchannelLogout": false,
            "protocol": "openid-connect",
            "attributes": {
                "realm_client": "false",
                "client.use.lightweight.access.token.enabled": "true",
                "post.logout.redirect.uris": "+",
                "pkce.code.challenge.method": "S256"
            },
            "authenticationFlowBindingOverrides": {},
            "fullScopeAllowed": true,
            "nodeReRegistrationTimeout": 0,
            "protocolMappers": [
                {
                    "id": "35ae7c38-bb34-4b49-b304-30d529cbbf5d",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                }
            ],
            "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "basic", "email"],
            "optionalClientScopes": ["address", "phone", "organization", "offline_access", "microprofile-jwt"]
        }
    ],
    "clientScopes": [
        {
            "id": "76e79b88-830b-4756-b7e4-17a4eeb2c784",
            "name": "profile",
            "description": "OpenID Connect built-in scope: profile",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${profileScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "b2a0d67e-6e52-461d-9e5e-3efeca0ce314",
                    "name": "website",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "website",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "website",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "adfe2939-e898-456b-b9e2-d4ecd3271f72",
                    "name": "family name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "lastName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "family_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "5827d870-e779-488d-87ba-2e2e1c273b01",
                    "name": "gender",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "gender",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "gender",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "1e3d88d6-2e53-41ac-b078-1fbd0c2937b4",
                    "name": "birthdate",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "birthdate",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "birthdate",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "46e5bbe2-4e56-48d3-a9ce-bb8851b93da5",
                    "name": "full name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-full-name-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "userinfo.token.claim": "true"
                    }
                },
                {
                    "id": "4585e5f7-5a46-4a56-a680-5c86cb90a49e",
                    "name": "locale",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "locale",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "locale",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "6915eea3-fe84-4331-a4df-39eeade774ff",
                    "name": "nickname",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "nickname",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "nickname",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "a4349327-ce6e-4400-84b8-717e49c8a548",
                    "name": "zoneinfo",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "zoneinfo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "zoneinfo",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c6af29e8-5ad5-4397-b01f-68a36cb08158",
                    "name": "picture",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "picture",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "picture",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "12c0a7bb-c3f3-4ecb-8f85-9e3dfb0e3fc2",
                    "name": "profile",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "profile",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "profile",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "04206a7b-b6e9-45ba-8e7c-b7b81f97d6c0",
                    "name": "given name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "firstName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "given_name",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "c6169feb-923f-4ca7-a91f-767b2e71791b",
                    "name": "updated at",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "updatedAt",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "updated_at",
                        "jsonType.label": "long"
                    }
                },
                {
                    "id": "342f6020-43e6-464a-bdb1-37d40c63d756",
                    "name": "username",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "preferred_username",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "e8a35f77-3fa2-49d1-90be-21ce9882b364",
                    "name": "middle name",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "middleName",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "middle_name",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "f8d8da66-de5b-481c-8f77-6e917a3679fd",
            "name": "role_list",
            "description": "SAML role list",
            "protocol": "saml",
            "attributes": {
                "consent.screen.text": "${samlRoleListScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "a593494e-17e9-41ce-baea-ac4ca69dd410",
                    "name": "role list",
                    "protocol": "saml",
                    "protocolMapper": "saml-role-list-mapper",
                    "consentRequired": false,
                    "config": {
                        "single": "false",
                        "attribute.nameformat": "Basic",
                        "attribute.name": "Role"
                    }
                }
            ]
        },
        {
            "id": "1e0eba52-ab24-477c-84dc-8234c9f6fc01",
            "name": "phone",
            "description": "OpenID Connect built-in scope: phone",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${phoneScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "6480924d-9045-4e4e-93e7-962a9fb2acae",
                    "name": "phone number",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumber",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "f8f9ceec-3a48-470a-80fc-d2da8eac0b58",
                    "name": "phone number verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "phoneNumberVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "phone_number_verified",
                        "jsonType.label": "boolean"
                    }
                }
            ]
        },
        {
            "id": "c3b49414-fa06-41d1-af4a-80c00e5b7856",
            "name": "web-origins",
            "description": "OpenID Connect scope for add allowed web origins to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "c57254d3-7604-40ae-b93c-2c72cc096c4a",
                    "name": "allowed web origins",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-allowed-origins-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "3a2f2ef9-bbd3-4b45-8ddf-b00c27ba595c",
            "name": "basic",
            "description": "OpenID Connect scope for add all basic claims to the token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "8409c4b3-8d6e-4229-ae4b-e44d58dbefe2",
                    "name": "sub",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-sub-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                },
                {
                    "id": "c57492f2-7a63-4b89-b176-4a2478eead0b",
                    "name": "auth_time",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usersessionmodel-note-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.session.note": "AUTH_TIME",
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "auth_time",
                        "jsonType.label": "long"
                    }
                }
            ]
        },
        {
            "id": "7b7db074-0c80-4033-bb8c-69b3f4129b84",
            "name": "address",
            "description": "OpenID Connect built-in scope: address",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${addressScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "f9d7233e-856e-4088-820d-f20fca12d032",
                    "name": "address",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-address-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute.formatted": "formatted",
                        "user.attribute.country": "country",
                        "introspection.token.claim": "true",
                        "user.attribute.postal_code": "postal_code",
                        "userinfo.token.claim": "true",
                        "user.attribute.street": "street",
                        "id.token.claim": "true",
                        "user.attribute.region": "region",
                        "access.token.claim": "true",
                        "user.attribute.locality": "locality"
                    }
                }
            ]
        },
        {
            "id": "1287dc8e-0ccb-4768-9485-e179ac249ab6",
            "name": "microprofile-jwt",
            "description": "Microprofile - JWT built-in scope",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "ad0ced92-8321-4a4a-ab85-e57f39e3bcdc",
                    "name": "upn",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "username",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "upn",
                        "jsonType.label": "String"
                    }
                },
                {
                    "id": "88083615-6f48-4e62-9ba4-49a39c59be73",
                    "name": "groups",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "multivalued": "true",
                        "user.attribute": "foo",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "groups",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "974bd102-df73-4473-85f0-e5bd26476703",
            "name": "acr",
            "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "7d7a11bb-9096-4d36-8554-b04a5bbe8d23",
                    "name": "acr loa level",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-acr-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                }
            ]
        },
        {
            "id": "3bcc7605-6c61-4642-99a0-15f6a12e3f73",
            "name": "saml_organization",
            "description": "Organization Membership",
            "protocol": "saml",
            "attributes": {
                "display.on.consent.screen": "false"
            },
            "protocolMappers": [
                {
                    "id": "b1bcdcf3-3221-4a70-a2d4-580dd14bc8f9",
                    "name": "organization",
                    "protocol": "saml",
                    "protocolMapper": "saml-organization-membership-mapper",
                    "consentRequired": false,
                    "config": {}
                }
            ]
        },
        {
            "id": "552083ac-b357-4527-8694-67374cc630b9",
            "name": "email",
            "description": "OpenID Connect built-in scope: email",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${emailScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "5ab7d6b6-84a7-414c-be09-8a10ebd052ea",
                    "name": "email verified",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-property-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "emailVerified",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email_verified",
                        "jsonType.label": "boolean"
                    }
                },
                {
                    "id": "5d496b67-8489-40f4-82dd-d3d677ea5989",
                    "name": "email",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-attribute-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "userinfo.token.claim": "true",
                        "user.attribute": "email",
                        "id.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "email",
                        "jsonType.label": "String"
                    }
                }
            ]
        },
        {
            "id": "8a232c03-5ffa-4199-8fa5-8c6556613338",
            "name": "organization",
            "description": "Additional claims about the organization a subject belongs to",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "true",
                "consent.screen.text": "${organizationScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "df22d34b-d4c3-481a-9b60-7151d8dc6478",
                    "name": "organization",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-organization-membership-mapper",
                    "consentRequired": false,
                    "config": {
                        "id.token.claim": "true",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "organization",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        },
        {
            "id": "9a09e0e0-8df0-4a17-9207-348e230efb27",
            "name": "offline_access",
            "description": "OpenID Connect built-in scope: offline_access",
            "protocol": "openid-connect",
            "attributes": {
                "consent.screen.text": "${offlineAccessScopeConsentText}",
                "display.on.consent.screen": "true"
            }
        },
        {
            "id": "d14346b4-babe-4c64-bd90-b9b146c91f85",
            "name": "roles",
            "description": "OpenID Connect scope for add user roles to the access token",
            "protocol": "openid-connect",
            "attributes": {
                "include.in.token.scope": "false",
                "consent.screen.text": "${rolesScopeConsentText}",
                "display.on.consent.screen": "true"
            },
            "protocolMappers": [
                {
                    "id": "4df32b51-b020-4c8b-90bc-9cf0d479cd92",
                    "name": "audience resolve",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-audience-resolve-mapper",
                    "consentRequired": false,
                    "config": {
                        "introspection.token.claim": "true",
                        "access.token.claim": "true"
                    }
                },
                {
                    "id": "261aac2f-8349-4475-81c5-1683e8a73866",
                    "name": "realm roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-realm-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "realm_access.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                },
                {
                    "id": "ee903438-d32c-4267-901f-51b9075dad27",
                    "name": "client roles",
                    "protocol": "openid-connect",
                    "protocolMapper": "oidc-usermodel-client-role-mapper",
                    "consentRequired": false,
                    "config": {
                        "user.attribute": "foo",
                        "introspection.token.claim": "true",
                        "access.token.claim": "true",
                        "claim.name": "resource_access.${client_id}.roles",
                        "jsonType.label": "String",
                        "multivalued": "true"
                    }
                }
            ]
        }
    ],
    "defaultDefaultClientScopes": [
        "role_list",
        "saml_organization",
        "profile",
        "email",
        "roles",
        "web-origins",
        "acr",
        "basic"
    ],
    "defaultOptionalClientScopes": ["offline_access", "address", "phone", "microprofile-jwt", "organization"],
    "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "referrerPolicy": "no-referrer",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": ["jboss-logging"],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "identityProviders": [],
    "identityProviderMappers": [],
    "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
            {
                "id": "d882d1a7-ef53-400a-9f14-0f47550a5748",
                "name": "Consent Required",
                "providerId": "consent-required",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "bbc328d9-b105-403f-a0e8-61347a7d1fb6",
                "name": "Max Clients Limit",
                "providerId": "max-clients",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "max-clients": ["200"]
                }
            },
            {
                "id": "5fbc1d48-c9c3-48ae-8546-5fb88c42d03c",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": ["true"]
                }
            },
            {
                "id": "6c61d864-159e-48f1-b2c3-f52c46cec581",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-address-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-usermodel-property-mapper",
                        "saml-user-property-mapper",
                        "saml-role-list-mapper",
                        "oidc-full-name-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "oidc-usermodel-attribute-mapper"
                    ]
                }
            },
            {
                "id": "577d6e62-301f-46d3-9116-70411f1cd187",
                "name": "Allowed Protocol Mapper Types",
                "providerId": "allowed-protocol-mappers",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "allowed-protocol-mapper-types": [
                        "oidc-address-mapper",
                        "saml-user-attribute-mapper",
                        "oidc-sha256-pairwise-sub-mapper",
                        "oidc-usermodel-property-mapper",
                        "saml-user-property-mapper",
                        "saml-role-list-mapper",
                        "oidc-usermodel-attribute-mapper",
                        "oidc-full-name-mapper"
                    ]
                }
            },
            {
                "id": "eb82aca8-249a-4333-8341-985df332e790",
                "name": "Full Scope Disabled",
                "providerId": "scope",
                "subType": "anonymous",
                "subComponents": {},
                "config": {}
            },
            {
                "id": "acff29e6-d846-452c-848d-cbadcc58af9d",
                "name": "Allowed Client Scopes",
                "providerId": "allowed-client-templates",
                "subType": "authenticated",
                "subComponents": {},
                "config": {
                    "allow-default-scopes": ["true"]
                }
            },
            {
                "id": "4b5680b6-d3ed-4f73-a14e-d34509edfbac",
                "name": "Trusted Hosts",
                "providerId": "trusted-hosts",
                "subType": "anonymous",
                "subComponents": {},
                "config": {
                    "host-sending-registration-request-must-match": ["true"],
                    "client-uris-must-match": ["true"]
                }
            }
        ],
        "org.keycloak.keys.KeyProvider": [
            {
                "id": "35ca5ebf-1810-4eac-b7eb-ae0fdfb812d5",
                "name": "rsa-enc-generated",
                "providerId": "rsa-enc-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEowIBAAKCAQEArJPR46MZgqcu4yk8Bx2cQg/f8i0cbohxa2KQ0Jr+sAuzxdoWUEkH4X+uuR1RSb3PnoBPmsLiFkp7YRqBCV01xQuk4xDb8uciaGOXD/zzRPwHLh0dQNqcathWV0/MV/0Tp4jMoWTduQkCXWIP/zeFy+FdACg2grL2mC8iMGZeQpdr2D5TS7Ig0WfTt7Q1TH+fCOnc6VAqqjz+DYGJm1EPLO8hryb5flwyOzFxM0jOa9sfutpc6zd53ORvENHwwm9YgH/cXArIp6cIuOZTMsfn8G9YWoyOfLOLenuluwGACsLjxiK4IrC3P4a9jyJo98VrXfP6sSYFemz/vD9+cYgZiQIDAQABAoIBAAC6iu+7wA+zLCtomo/oV/+LMktkqueedJ4Yp8xeW6XD340KGDSPkPPQyrspi3yK8ZbwKb8HAu1Km9N7oYFu3EeTpiKBnnMVp7jFCHPYcVWKWNCg7hF7lqG9N+HHGpGI/n7aMCgBOrKnV/KlrAx9Gs7Ay3Ck2tLglbnKPX3mjTq07G9qZVMBI2DklVDOzJWcgbVsWon0E1j9FhW/CuUOk/UkSti3LoEl6EdTpwXvWIq19MLj0Uhl522Rcs1+VYzOM/+6beXIwwJkxOPArx4Lcv9PbQPYpYDJi6Umhb035PezRD6yCd1eFE6jjvuDWJA/W4841wnbYIeiTISOkuVCEUECgYEA6dbzx6OfY9V5HvUvIqWy3GcmogDXbhyG15n8uaaZtEFzDZ3ahYzgN9NEA0jrFDc8qbwo9P/3BrYQUcEUpjvJAjw6fep/MAcNQBUgRNnvDaBuVufCz3PP2ac5rntIqmlYxADrxEWJt4GNs5UhGdMFTdpCp5Tqg8FLE2zCEEUpqkECgYEAvO6exMEDwLHCg8j7qk+qflY4KTIDFrRf4AWFQ/0ck5WFG/C3kaqKbIThGHWH6doc9Wsx/gei9cNHCYZOHAwL0DLQq6zol1rPbpuAIZ44HjTk4SXU3EPN9MrZIfY2AWonNUapilw4nlNF4e0lY8MhImQmWpZ/jYqSgoiviRoxTUkCgYEAoG8d6obUQIaiBx9pK3hL8vPCibvSEnX3/cxknGs1YXrWGS2IU8CHxUVpkGdjAgez0zCJWS6UqUIYiD7UkAjMrH/uEZ3ljWoJKUJVVWfAn7TGf1GbUwG+RTJ6XL+w51pH0JJhL9QV3JVCR0e14iXpqbRprth43dSsUbN4ofkR0QECgYBYWCgrjqmnkDeJkhCECe6KVty5/qXNFxkB0vMG4LNdG3x7nSrpVVqW9eefnU2pfxEtfSuKQp3j16U/AetCWCup9ij3LcoxBAidCt92WNqa3VbtJNiNCrOitLulktCcBrxAwEME7KyY9A1oYJCsPpEe2L/Kejc4w0RQ/4M9U98b6QKBgHvYiDg4houMRPEpAYRa6w6ksOYW0vXfAsnwG+3DxXtE9XkeeLqdDiE6C4k+4fFF8osJ/k5AsYaJOtNPrA4X4YAc6Lw9PQAE79lHp8/dc3OQsxkuM8sc0eIPkrskKaQCSdY4qi4Y9SOgnJfnCdNEH9tM6iSetul9eHXj923rU0+e"
                    ],
                    "keyUse": ["ENC"],
                    "certificate": [
                        "MIICmzCCAYMCBgGTyZA/JTANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZTaGllbGQwHhcNMjQxMjE1MDkwMzE0WhcNMzQxMjE1MDkwNDU0WjARMQ8wDQYDVQQDDAZTaGllbGQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCsk9HjoxmCpy7jKTwHHZxCD9/yLRxuiHFrYpDQmv6wC7PF2hZQSQfhf665HVFJvc+egE+awuIWSnthGoEJXTXFC6TjENvy5yJoY5cP/PNE/AcuHR1A2pxq2FZXT8xX/ROniMyhZN25CQJdYg//N4XL4V0AKDaCsvaYLyIwZl5Cl2vYPlNLsiDRZ9O3tDVMf58I6dzpUCqqPP4NgYmbUQ8s7yGvJvl+XDI7MXEzSM5r2x+62lzrN3nc5G8Q0fDCb1iAf9xcCsinpwi45lMyx+fwb1hajI58s4t6e6W7AYAKwuPGIrgisLc/hr2PImj3xWtd8/qxJgV6bP+8P35xiBmJAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAEqOJPRoVAO3xcNgRtm+h/VFs88jwNLmOErZm987V99Pqo+waNh9uX8NoUfhPQO9bd8nbZ5pMDNFZS8XXUzlE5Y9bpDlCoDaxZv4+Nrup5y0tcwSG4VOUUA50XRQvPIKrzHpKOQl46qjAQApOWtHxMo7vg8x2Gm3rz/+YEkwH5YAZl2l0bQ5HFxIEqt4HEF8YKGmsOJumIUOloo0XUH5HhrUhbXgsDPFC3ukISAt5Ti+QmQX/yAKCp/PvEEYHz2o+ngBF21tY+qfBEvyCag37IYM7r1vfGBez3gSI1tkzjd/6gvfj8/FI854KnFCvuP+kf/GSua75yzqnFh2AHOblmY="
                    ],
                    "priority": ["100"],
                    "algorithm": ["RSA-OAEP"]
                }
            },
            {
                "id": "b387e785-2afa-405a-bcbd-7f68e2e14e77",
                "name": "rsa-generated",
                "providerId": "rsa-generated",
                "subComponents": {},
                "config": {
                    "privateKey": [
                        "MIIEowIBAAKCAQEAmU5YemfafjWG4NA99lvcdOL4mPYo4Lf9P28GUAIIRgIW6OHXF9vPMBbmnKT3b/G8/0zYdkEIiM7qjNfVJBOiD6bp5YG3RxoS2jNht0i4/3ZJWXlM0TXV8RjLrKUIZu3nuhY3VMhd+f6sli0eqFJ2aj8OOKL3MCW9uGheQ6IOtA1ehD4lHxI5GvSZR6zPeAgm3Zexis11PXteopURHAXJGbdQl4NRZv3TVCJeUkyigrHQzzDEvm0FIv85iKDGQweIZjVETEVH1xBrT5KxZCSakxqUp9KLdrvbV7Vjib6Qj6IW4v2a81sviL9/J58fkinZX0ZIX2iPm/ru1kxJeX49TQIDAQABAoIBAAEwYhRuq3tuiI9EF1bvO3R7erz3QFp7ia7/aAMgjp9MYNmuG0uHylPdcHYnID5xvBipFeppcrYRfeeiTy9zlmMKZ4H+v0TdC8M+C1jTtGubXmSNQbeMhnv37Pouqg9yTg4Sj8Bw3odvQxNoPZszc/TNR9KrfFNN16Fqy4Tv6IptgsIIiUv6lUt661udVhFjgYQYns3MCVUdCgvVlJvh3w7n+1NByBAm2MjM3RMMno3YD1WcOs/JZPNqEJZlLyCfOtw0NJBPz0VPHSFiNMlG3qZUjduMtnf8nJcgeM9gCZDsOfTGv2sUZXZ63biIbazQiCKqjzp7ovHuFf0bZH0T8EECgYEAxx2NUq1+nKe562Ndd6NHDwfYLBsv9ZEIW7G/BgTiSCxL0bMTxF/+swbwjNgcM9QqI7gM9D99qwJSBi+fLXLZH1oyVs6ux+7wrx9inOdylP0w+zUGPn0fK9rFx2/VO6tP8RXKk9t03JeVNTOdMQTWhRjpwY4i9UG9GNBg5S6bA0UCgYEAxRp9pJFLmD69yGN06tIXRBGvq6W7AVMv8fPCGwvRAZ12daJnQmBVI6UmzQ9syGL14u590/Dx286SuMzRV7lD0xlu5gj731NHzltnilCMEaT9y3lGLPbozmogIt6hDQiLaMk/Th+erQO06IwJKoIkFTfovUM800SRoJxR6Lt9rmkCgYB6FN5vULyOZDAT6KqIDe4lgxPBhzHSiIftYH/Uuu3afn5GJlv6TTkmnxyh3mb8SBtGJzSaFMuCLDwKWuxnu0DwfibbHoH/R7r+RGn79dRFETAU9Z/MdH7GLq6Q5zqACTtMf6XjHez6y13Kbsj0Ixk8Jdg8ul8orJO6QRkHq5mTWQKBgCE+vJ57W1LMklowXFIXKZFzojvDcm1gyJ94y+6f6ZrqIkbpI52QfgvLGWZRCboq5upl65dJ9qFqkFjXQyAWwZfjnE70iPc8JspppGcx+s4nFB+zzuBarR3TzKPVBTkbjdgYybK1pp/sFiF7LTicRtXFXl497w57bEy40R/+L86xAoGBAJKyETN2vG+qBx8SqESpi/W/LAz8yzJnb6dxGTPhaquOSPmQ1VVpZ7hA9RmSehUBQM4TfsgLJvnHOlwovuwGPGU82Ssk4FnMWY+HiKXEgTjDVHPQ0Ijm8LWHN59T7Q+TE1/Lcixyu3mMrJQARtKWOC5Ho1ypePxHEWz5Z3NM00Zm"
                    ],
                    "keyUse": ["SIG"],
                    "certificate": [
                        "MIICmzCCAYMCBgGTyZA+/zANBgkqhkiG9w0BAQsFADARMQ8wDQYDVQQDDAZTaGllbGQwHhcNMjQxMjE1MDkwMzE0WhcNMzQxMjE1MDkwNDU0WjARMQ8wDQYDVQQDDAZTaGllbGQwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCZTlh6Z9p+NYbg0D32W9x04viY9ijgt/0/bwZQAghGAhbo4dcX288wFuacpPdv8bz/TNh2QQiIzuqM19UkE6IPpunlgbdHGhLaM2G3SLj/dklZeUzRNdXxGMuspQhm7ee6FjdUyF35/qyWLR6oUnZqPw44ovcwJb24aF5Dog60DV6EPiUfEjka9JlHrM94CCbdl7GKzXU9e16ilREcBckZt1CXg1Fm/dNUIl5STKKCsdDPMMS+bQUi/zmIoMZDB4hmNURMRUfXEGtPkrFkJJqTGpSn0ot2u9tXtWOJvpCPohbi/ZrzWy+Iv38nnx+SKdlfRkhfaI+b+u7WTEl5fj1NAgMBAAEwDQYJKoZIhvcNAQELBQADggEBABuOrCY451Gl+XfbebnmgKteVpk3r/zdJb0+JloPqAjJgb/W2Bo4/3GtDlPVSEvsClyiJeuBDFQ0zG7/7d/e5AnmE6/cmf0dPL6YZSh5l8boRDf80wzG5e1JlgDHjjXEv2SHCrRPcrghqXVpytDX8qq28eqUjd5/zur9B/FmCUCgMfItPjuS7F9vJKTaZqixOjVQGR0Mjg3IRW+lh85rQ9QbNl4Dh2ptyuMrY+pneFWkKp/+LG0YCwlhZ/6NUr/r4Vbwfoy0qbgxWmQoHoZnfyB1pKwnu5sLgCryVIriqcmkMct6RS9KP0sFTj8HSy+Rc03m+LzYcW1ODY7h6sFksnU="
                    ],
                    "priority": ["100"]
                }
            },
            {
                "id": "eddfd59d-975a-4707-8211-b7448641adcd",
                "name": "aes-generated",
                "providerId": "aes-generated",
                "subComponents": {},
                "config": {
                    "kid": ["eba08242-5e1b-4e22-8660-c713fab5f056"],
                    "secret": ["608fTBUDnEbIZ-hRJRz4Sg"],
                    "priority": ["100"]
                }
            },
            {
                "id": "d0b44058-ff1b-44cf-8dbf-270219a7f235",
                "name": "hmac-generated-hs512",
                "providerId": "hmac-generated",
                "subComponents": {},
                "config": {
                    "kid": ["958949e9-c449-4135-853c-188d0103bed1"],
                    "secret": [
                        "kbQMBVJTJwpPAlVTNHJDuEzmjQOBI-baQYPuSfiL8w4fBQu_RyqFpGZHxg8MuytrdYD4uYPEA_LlZpAmHoCC3_IyjngF7-mjkj8U2nywLaDKMYjF_PUyzqD4WnoMurmZCWg6G7912ml5iMZRTzLiKoqyTdyFVtDxwJ1oy-t-wEw"
                    ],
                    "priority": ["100"],
                    "algorithm": ["HS512"]
                }
            }
        ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
        {
            "id": "d78d64b1-e2a7-4454-87c0-601b36444573",
            "alias": "Account verification options",
            "description": "Method with which to verity the existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-email-verification",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Verify Existing Account by Re-authentication",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "f8f87cc0-cd33-466d-a347-cc8779435b7c",
            "alias": "Browser - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "c47e7c38-25c8-472c-b2d7-7a9fface47e4",
            "alias": "Browser - Conditional Organization",
            "description": "Flow to determine if the organization identity-first login is to be used",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "organization",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "6838cae6-8dd2-4cf9-922c-dae4290bb0cb",
            "alias": "Direct Grant - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "be0eb500-2f0d-4ebf-9528-59f35cdaf7df",
            "alias": "First Broker Login - Conditional Organization",
            "description": "Flow to determine if the authenticator that adds organization members is to be used",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "idp-add-organization-member",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "6dcc6dcf-609f-44ae-88cc-b2b8b678111c",
            "alias": "First broker login - Conditional OTP",
            "description": "Flow to determine if the OTP is required for the authentication",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-otp-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "a0bc8f5e-50bd-46e2-90f7-4ab5db73339e",
            "alias": "Handle Existing Account",
            "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-confirm-link",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Account verification options",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "c379893c-6d98-4c44-a8e1-1b8fbc4bc57b",
            "alias": "Organization",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional Organization",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "f575926d-124c-4c1a-959f-76cf5a7541a9",
            "alias": "Reset - Conditional OTP",
            "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "conditional-user-configured",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-otp",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "56e50b25-2b65-4585-ba78-1351191b6f9d",
            "alias": "User creation or linking",
            "description": "Flow for the existing/non-existing user alternatives",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "create unique user config",
                    "authenticator": "idp-create-user-if-unique",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Handle Existing Account",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "7f2c3c49-cc85-4fa8-af8c-7c4e9e2743bf",
            "alias": "Verify Existing Account by Re-authentication",
            "description": "Reauthentication of existing account",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "idp-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "First broker login - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "e90306ed-3119-4828-af38-361e7f802dbd",
            "alias": "browser",
            "description": "Browser based authentication",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-cookie",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "auth-spnego",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "identity-provider-redirector",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 25,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 26,
                    "autheticatorFlow": true,
                    "flowAlias": "Organization",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "forms",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "7a750662-d75c-4d8a-9538-6017d1cec9ed",
            "alias": "clients",
            "description": "Base authentication for clients",
            "providerId": "client-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "client-secret",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-secret-jwt",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "client-x509",
                    "authenticatorFlow": false,
                    "requirement": "ALTERNATIVE",
                    "priority": 40,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "33e67d1a-d6cf-4ec4-b163-2d34b97281e5",
            "alias": "direct grant",
            "description": "OpenID Connect Resource Owner Grant",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "direct-grant-validate-username",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "direct-grant-validate-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 30,
                    "autheticatorFlow": true,
                    "flowAlias": "Direct Grant - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "ddfc1733-7852-4449-afb0-7b41bf54bec6",
            "alias": "docker auth",
            "description": "Used by Docker clients to authenticate against the IDP",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "docker-http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "933b8f8d-f90e-4f3e-aa44-3b161dcc95e5",
            "alias": "first broker login",
            "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticatorConfig": "review profile config",
                    "authenticator": "idp-review-profile",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "User creation or linking",
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 50,
                    "autheticatorFlow": true,
                    "flowAlias": "First Broker Login - Conditional Organization",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "efcd355d-2ed6-4015-b98a-62e8aa370e8a",
            "alias": "forms",
            "description": "Username, password, otp and other auth forms.",
            "providerId": "basic-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "auth-username-password-form",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 20,
                    "autheticatorFlow": true,
                    "flowAlias": "Browser - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "7bf0f065-925d-4f4b-b2e4-1ad11146b2e0",
            "alias": "registration",
            "description": "Registration flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-page-form",
                    "authenticatorFlow": true,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": true,
                    "flowAlias": "registration form",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "1c3b34ed-e1d5-48f7-b5b7-f1c072e9faf4",
            "alias": "registration form",
            "description": "Registration form",
            "providerId": "form-flow",
            "topLevel": false,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "registration-user-creation",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-password-action",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 50,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-recaptcha-action",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 60,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "registration-terms-and-conditions",
                    "authenticatorFlow": false,
                    "requirement": "DISABLED",
                    "priority": 70,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "db83d2f0-8754-42f3-9888-f35e2a0eed44",
            "alias": "reset credentials",
            "description": "Reset credentials for a user if they forgot their password or something",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "reset-credentials-choose-user",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-credential-email",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 20,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticator": "reset-password",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 30,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                },
                {
                    "authenticatorFlow": true,
                    "requirement": "CONDITIONAL",
                    "priority": 40,
                    "autheticatorFlow": true,
                    "flowAlias": "Reset - Conditional OTP",
                    "userSetupAllowed": false
                }
            ]
        },
        {
            "id": "a630442c-83b8-4776-8bf0-dd6330d697ad",
            "alias": "saml ecp",
            "description": "SAML ECP Profile Authentication Flow",
            "providerId": "basic-flow",
            "topLevel": true,
            "builtIn": true,
            "authenticationExecutions": [
                {
                    "authenticator": "http-basic-authenticator",
                    "authenticatorFlow": false,
                    "requirement": "REQUIRED",
                    "priority": 10,
                    "autheticatorFlow": false,
                    "userSetupAllowed": false
                }
            ]
        }
    ],
    "authenticatorConfig": [
        {
            "id": "44f20396-a0fa-42d4-8b62-f30c5082bdd9",
            "alias": "create unique user config",
            "config": {
                "require.password.update.after.registration": "false"
            }
        },
        {
            "id": "f55d57a6-7ac2-4023-bad0-0f0762523c70",
            "alias": "review profile config",
            "config": {
                "update.profile.on.first.login": "missing"
            }
        }
    ],
    "requiredActions": [
        {
            "alias": "CONFIGURE_TOTP",
            "name": "Configure OTP",
            "providerId": "CONFIGURE_TOTP",
            "enabled": true,
            "defaultAction": false,
            "priority": 10,
            "config": {}
        },
        {
            "alias": "TERMS_AND_CONDITIONS",
            "name": "Terms and Conditions",
            "providerId": "TERMS_AND_CONDITIONS",
            "enabled": false,
            "defaultAction": false,
            "priority": 20,
            "config": {}
        },
        {
            "alias": "UPDATE_PASSWORD",
            "name": "Update Password",
            "providerId": "UPDATE_PASSWORD",
            "enabled": true,
            "defaultAction": false,
            "priority": 30,
            "config": {}
        },
        {
            "alias": "UPDATE_PROFILE",
            "name": "Update Profile",
            "providerId": "UPDATE_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 40,
            "config": {}
        },
        {
            "alias": "VERIFY_EMAIL",
            "name": "Verify Email",
            "providerId": "VERIFY_EMAIL",
            "enabled": true,
            "defaultAction": false,
            "priority": 50,
            "config": {}
        },
        {
            "alias": "delete_account",
            "name": "Delete Account",
            "providerId": "delete_account",
            "enabled": false,
            "defaultAction": false,
            "priority": 60,
            "config": {}
        },
        {
            "alias": "webauthn-register",
            "name": "Webauthn Register",
            "providerId": "webauthn-register",
            "enabled": true,
            "defaultAction": false,
            "priority": 70,
            "config": {}
        },
        {
            "alias": "webauthn-register-passwordless",
            "name": "Webauthn Register Passwordless",
            "providerId": "webauthn-register-passwordless",
            "enabled": true,
            "defaultAction": false,
            "priority": 80,
            "config": {}
        },
        {
            "alias": "VERIFY_PROFILE",
            "name": "Verify Profile",
            "providerId": "VERIFY_PROFILE",
            "enabled": true,
            "defaultAction": false,
            "priority": 90,
            "config": {}
        },
        {
            "alias": "delete_credential",
            "name": "Delete Credential",
            "providerId": "delete_credential",
            "enabled": true,
            "defaultAction": false,
            "priority": 100,
            "config": {}
        },
        {
            "alias": "update_user_locale",
            "name": "Update User Locale",
            "providerId": "update_user_locale",
            "enabled": true,
            "defaultAction": false,
            "priority": 1000,
            "config": {}
        }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "firstBrokerLoginFlow": "first broker login",
    "attributes": {
        "cibaBackchannelTokenDeliveryMode": "poll",
        "cibaExpiresIn": "120",
        "cibaAuthRequestedUserHint": "login_hint",
        "oauth2DeviceCodeLifespan": "600",
        "oauth2DevicePollingInterval": "5",
        "parRequestUriLifespan": "60",
        "cibaInterval": "5",
        "realmReusableOtpCode": "false"
    },
    "keycloakVersion": "26.0.7",
    "userManagedAccessAllowed": false,
    "organizationsEnabled": false,
    "clientProfiles": {
        "profiles": []
    },
    "clientPolicies": {
        "policies": []
    }
}
